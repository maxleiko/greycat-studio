{"version":3,"sources":["../../greycat-lang-monaco/dist/esm/workerManager.js","../../greycat-lang-monaco/dist/esm/languageFeatures.js","../../greycat-lang-monaco/dist/esm/gcMode.js"],"names":["workerManager","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","clearInterval","_client","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","settings","types","gcTypes","functions","gcFunctions","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","p","completeCallback","errorCallback","r","Promise","c","e","then","toShallowCancelPromise","client","withSyncedResources","Range","monarchTokens","defaultToken","keywords","typeKeywords","operators","symbols","escapes","brackets","open","close","token","tokenizer","root","cases","@typeKeywords","@keywords","@default","include","@operators","comment","string","$#==$S2","next","whitespace","DiagnosticAdapter","_languageId","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","Object","keys","forEach","k","getModels","d","resource","worker","getModel","doValidation","diagnostics","markers","map","diag","code","String","severity","lsSeverity","main","Error","MarkerSeverity","Warning","Information","Hint","Info","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","toDiagnostics","done","undefined","err","console","error","fromPosition","position","column","lineNumber","toRange","languageFeatures_CompletionAdapter","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","wireCancellationToken","pos","doComplete","isIncomplete","items","cList","entry","item","insertText","sortText","filterText","documentation","detail","kind","mItemKind","languages","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toCompletionItemKind","textEdit","newText","insertTextFormat","value","HoverAdapter","provideHover","doHover","info","contents","Array","isArray","toMarkdownString","toMarkedStringArray","thing","replace","language","promise","onCancellationRequested","cancel","setupMode","first","more","apply","concat","setMonarchTokensProvider","registerCompletionItemProvider","registerHoverProvider","__webpack_require__","__webpack_exports__"],"mappings":"8FAAA,IAgGeA,EA5Ff,WACA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,KAEAA,KAAAC,UAAAH,EACAE,KAAAE,QAAA,KACAF,KAAAG,mBAAAC,YAAA,WACA,OAAAL,EAAAM,gBACK,KACLL,KAAAM,cAAA,EACAN,KAAAO,sBAAAP,KAAAC,UAAAO,YAAA,WACA,OAAAT,EAAAU,gBA8EA,OA1EAZ,EAAAa,UAAAC,QAAA,WACAC,cAAAZ,KAAAG,oBAEAH,KAAAO,sBAAAI,UAEAX,KAAAS,eAGAZ,EAAAa,UAAAD,YAAA,WACAT,KAAAE,UACAF,KAAAE,QAAAS,UAEAX,KAAAE,QAAA,MAGAF,KAAAa,QAAA,MAGAhB,EAAAa,UAAAL,aAAA,WACAL,KAAAE,UAIAY,KAAAC,MAAAf,KAAAM,cA1CA,MA6CAN,KAAAS,gBAIAZ,EAAAa,UAAAM,WAAA,WAmBA,OAlBAhB,KAAAM,cAAAQ,KAAAC,MAEAf,KAAAa,UACAb,KAAAE,QAAAe,OAAAC,OAAAC,gBAAA,CAEAC,SAAA,iBACAC,MAAArB,KAAAC,UAAAqB,WAEAC,WAAA,CACAD,WAAAtB,KAAAC,UAAAqB,WACAE,iBAAAxB,KAAAC,UAAAwB,SACAC,MAAA1B,KAAAC,UAAA0B,QACAC,UAAA5B,KAAAC,UAAA4B,eAGA7B,KAAAa,QAAAb,KAAAE,QAAA4B,YAGA9B,KAAAa,SAGAhB,EAAAa,UAAAqB,yBAAA,WAKA,IAJA,IAQAlB,EARAd,EAAAC,KAEAgC,EAAA,GAEAC,EAAA,EAAoBA,EAAAC,UAAAC,OAAuBF,IAC3CD,EAAAC,GAAAC,UAAAD,GAKA,OAgBA,SAAAG,GACA,IAAAC,EAAA,aAIAC,EAAA,aAIAC,EAAA,IAAAtB,OAAAuB,QAAA,SAAAC,EAAAC,GACAL,EAAAI,EACAH,EAAAI,GACG,cAEH,OADAN,EAAAO,KAAAN,EAAAC,GACAC,EA9BAK,CAAA5C,KAAAgB,aAAA2B,KAAA,SAAAE,GACA,OAAAhC,EAAAgC,IACKF,KAAA,WACL5C,EAAAG,SACAH,EAAAG,QAAA4C,oBAAAd,KAEKW,KAAA,WACL,OAAA9B,MAIAhB,EAzFA,gBCHAkD,EAAA9B,OAAA8B,MACOC,EAAA,CAEPC,aAAA,UACAC,SAAA,sIACAC,aAAA,sIACAC,UAAA,8CAEAC,QAAA,8BAEAC,QAAA,+CAEAC,SAAA,EACAC,KAAA,IACAC,MAAA,IACAC,MAAA,mBACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,mBACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,oBACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,oBAGAC,UAAA,CACAC,KAAA,CACA,kBACAC,MAAA,CACAC,gBAAA,UACAC,YAAA,UACAC,WAAA,gBAEK,iEACL,CACAC,QAAA,eAEA,cAAS,2DACTJ,MAAA,CACAK,aAAA,WACAF,WAAA,MAGA,6DACA,qBACA,gMACA,uGACAG,QAAA,kGACAC,OAAA,+FACAP,MAAA,CACAQ,UAAA,CACAX,MAAA,SACAY,KAAA,QAEAN,WAAA,aAGAO,WAAA,+EAIAC,EAEA,WACA,SAAAA,EAAAC,EAAAvE,GACA,IAAAH,EAAAC,KAEAA,KAAAyE,cACAzE,KAAAE,UACAF,KAAA0E,aAAA,GACA1E,KAAA2E,UAAA,GAEA,IAAAC,EAAA,SAAAC,GACA,IAMAC,EANAC,EAAAF,EAAAG,YAEAD,IAAAhF,EAAA0E,cAKA1E,EAAA4E,UAAAE,EAAAI,IAAAC,YAAAL,EAAAM,mBAAA,WACAC,aAAAN,GACAA,EAAAO,WAAA,WACA,OAAAtF,EAAAuF,YAAAT,EAAAI,IAAAF,IACS,OAGThF,EAAAuF,YAAAT,EAAAI,IAAAF,KAGAQ,EAAA,SAAAV,GACA5D,OAAAC,OAAAsE,gBAAAX,EAAA9E,EAAA0E,YAAA,IACA,IAAAgB,EAAAZ,EAAAI,IAAAC,WACAQ,EAAA3F,EAAA4E,UAAAc,GAEAC,IACAA,EAAA/E,iBACAZ,EAAA4E,UAAAc,KAIAzF,KAAA0E,aAAAiB,KAAA1E,OAAAC,OAAA0E,iBAAAhB,IAEA5E,KAAA0E,aAAAiB,KAAA1E,OAAAC,OAAA2E,mBAAAN,IAEAvF,KAAA0E,aAAAiB,KAAA1E,OAAAC,OAAA4E,yBAAA,SAAAC,GACAR,EAAAQ,EAAAlB,OACAD,EAAAmB,EAAAlB,UAGA7E,KAAA0E,aAAAiB,KAAA,CACAhF,QAAA,WACAqF,OAAAC,KAAAlG,EAAA4E,WAAAuB,QAAA,SAAAC,GACApG,EAAA4E,UAAAwB,GAAAxF,eAKAM,OAAAC,OAAAkF,YAAAF,QAAAtB,GAgCA,OA7BAJ,EAAA9D,UAAAC,QAAA,WACAX,KAAA0E,aAAAwB,QAAA,SAAAG,GACA,OAAAA,KAAA1F,YAGAX,KAAA0E,aAAA,IAGAF,EAAA9D,UAAA4E,YAAA,SAAAgB,EAAAhF,GACAtB,KAAAE,QAAAoG,GAAA3D,KAAA,SAAA4D,GACA,OAAAtF,OAAAC,OAAAsF,SAAAF,GAKAC,EAAAE,aAAAH,EAAApB,YAHA,OAIKvC,KAAA,SAAA+D,GACL,GAAAA,EAAA,CACA,IAAAC,EAAAD,EAAAE,IAAA,SAAAP,GACA,OA8BA,SAAAC,EAAAO,GACA,IAAAC,EAAA,kBAAAD,EAAAC,KAAAC,OAAAF,EAAAC,MAAAD,EAAAC,KACA,OACAE,SAlBA,SAAAC,GACA,OAAAA,GACA,KAASC,EAAA,EAAqBC,MAC9B,OAAAlG,OAAAmG,eAAAD,MAEA,KAASD,EAAA,EAAqBG,QAC9B,OAAApG,OAAAmG,eAAAC,QAEA,KAASH,EAAA,EAAqBI,YAC9B,KAASJ,EAAA,EAAqBK,KAC9B,QACA,OAAAtG,OAAAmG,eAAAI,MAOAC,CAAAZ,EAAAG,UACAU,gBAAAb,EAAAc,MAAAC,MAAAC,KACAC,YAAAjB,EAAAc,MAAAC,MAAAG,UACAC,cAAAnB,EAAAc,MAAAM,IAAAJ,KACAK,UAAArB,EAAAc,MAAAM,IAAAF,UAAA,EACAI,QAAAtB,EAAAsB,QACArB,OACAsB,OAAAvB,EAAAuB,QAxCAC,CAAA/B,EAAAD,KAEApF,OAAAC,OAAAsE,gBAAAvE,OAAAC,OAAAsF,SAAAF,GAAAhF,EAAAqF,MAEK2B,UAAAC,EAAA,SAAAC,GAELC,QAAAC,MAAAF,MAIAhE,EAvFA,GA0HA,SAAAmE,EAAAC,GACA,GAAAA,EAIA,OACAb,UAAAa,EAAAC,OAAA,EACAhB,KAAAe,EAAAE,WAAA,GAIA,SAAAC,EAAApB,GACA,GAAAA,EAIA,WAAA5E,EAAA4E,EAAAC,MAAAC,KAAA,EAAAF,EAAAC,MAAAG,UAAA,EAAAJ,EAAAM,IAAAJ,KAAA,EAAAF,EAAAM,IAAAF,UAAA,GAiEA,IAAIiB,EAEJ,WACA,SAAAC,EAAA/I,GACAF,KAAAE,UAwDA,OArDA8F,OAAAkD,eAAAD,EAAAvI,UAAA,qBACAyI,IAAA,WACA,iBAEAC,YAAA,EACAC,cAAA,IAGAJ,EAAAvI,UAAA4I,uBAAA,SAAAzE,EAAA+D,EAAAlF,GACA,IAAA4C,EAAAzB,EAAAI,IACA,OAAAsE,EAAA7F,EAAA1D,KAAAE,QAAAoG,GAAA3D,KAAA,SAAA4D,GACA,IAAAiD,EAAAb,EAAAC,GAEA,OAAAY,EACAjD,EAAAkD,WAAAnD,EAAApB,WAAAsE,GAGA,CACAE,cAAA,EACAC,MAAA,MAEKhH,KAAA,SAAAiH,GACL,IAAAD,EAAAC,EAAAD,MAAA/C,IAAA,SAAAiD,GACA,IAAAC,EAAA,CACAzI,MAAAwI,EAAAxI,MACA0I,WAAAF,EAAAE,WACAC,SAAAH,EAAAG,SACAC,WAAAJ,EAAAI,WACAC,cAAAL,EAAAK,cACAC,OAAAN,EAAAM,OACAC,KAnGA,SAAAA,GACA,IAAAC,EAAApJ,OAAAqJ,UAAAC,mBAEA,OAAAH,GACA,KAASlD,EAAA,EAAqBsD,KAC9B,OAAAH,EAAAG,KAEA,KAAStD,EAAA,EAAqBuD,OAC9B,OAAAJ,EAAAI,OAEA,KAASvD,EAAA,EAAqBwD,SAC9B,OAAAL,EAAAK,SAEA,KAASxD,EAAA,EAAqByD,YAC9B,OAAAN,EAAAM,YAEA,KAASzD,EAAA,EAAqB0D,MAC9B,OAAAP,EAAAO,MAEA,KAAS1D,EAAA,EAAqB2D,SAC9B,OAAAR,EAAAQ,SAEA,KAAS3D,EAAA,EAAqB4D,MAC9B,OAAAT,EAAAS,MAEA,KAAS5D,EAAA,EAAqB6D,UAC9B,OAAAV,EAAAU,UAEA,KAAS7D,EAAA,EAAqB8D,OAC9B,OAAAX,EAAAW,OAEA,KAAS9D,EAAA,EAAqB+D,SAC9B,OAAAZ,EAAAY,SAEA,KAAS/D,EAAA,EAAqBgE,KAC9B,OAAAb,EAAAa,KAEA,KAAShE,EAAA,EAAqBiE,MAC9B,OAAAd,EAAAc,MAEA,KAASjE,EAAA,EAAqBkE,KAC9B,OAAAf,EAAAe,KAEA,KAASlE,EAAA,EAAqBmE,QAC9B,OAAAhB,EAAAgB,QAEA,KAASnE,EAAA,EAAqBoE,QAC9B,OAAAjB,EAAAiB,QAEA,KAASpE,EAAA,EAAqBqE,MAC9B,OAAAlB,EAAAkB,MAEA,KAASrE,EAAA,EAAqBsE,KAC9B,OAAAnB,EAAAmB,KAEA,KAAStE,EAAA,EAAqBuE,UAC9B,OAAApB,EAAAoB,UAGA,OAAApB,EAAAY,SAwCAS,CAAA7B,EAAAO,OAcA,OAXAP,EAAA8B,WACA7B,EAAAnC,MAAAoB,EAAAc,EAAA8B,SAAAhE,OACAmC,EAAAC,WAAAF,EAAA8B,SAAAC,SAGA/B,EAAAgC,mBAAuC3E,EAAA,EAAmBoE,UAC1DxB,EAAAC,WAAA,CACA+B,MAAAhC,EAAAC,aAIAD,IAEA,OACAJ,aAAAE,EAAAF,aACAC,aAKAV,EA1DA,GA+DA8C,EAEA,WACA,SAAAA,EAAA7L,GACAF,KAAAE,UAmBA,OAhBA6L,EAAArL,UAAAsL,aAAA,SAAAnH,EAAA+D,EAAAlF,GACA,IAAA4C,EAAAzB,EAAAI,IACA,OAAAsE,EAAA7F,EAAA1D,KAAAE,QAAAoG,GAAA3D,KAAA,SAAA4D,GACA,OAAAA,EAAA0F,QAAA3F,EAAApB,WAAAyD,EAAAC,MACKjG,KAAA,SAAAuJ,GACL,GAAAA,EAIA,OACAvE,MAAAoB,EAAAmD,EAAAvE,OACAwE,SAUA,SAAAA,GACA,IAAAA,EACA,OAGA,GAAAC,MAAAC,QAAAF,GACA,OAAAA,EAAAvF,IAAA0F,GAGA,OAAAA,EAAAH,IAnBAI,CAAAL,EAAAC,eAKAJ,EArBA,GAsCA,SAAAO,EAAAzC,GACA,wBAAAA,EACA,CACAiC,MAAAjC,IAqBA2C,EAjBA3C,IAkBA,kBAAA2C,GAAA,kBAAAA,EAAApC,KAjBA,cAAAP,EAAAO,KACA,CACA0B,MAAAjC,EAAAiC,MAAAW,QAAA,wBAA4C,SAI5C,CACAX,MAAAjC,EAAAiC,OAIA,CACAA,MAAA,MAAAjC,EAAA6C,SAAA,KAAA7C,EAAAiC,MAAA,WAIA,IAAAU,EAQA,SAAAjD,EAAA7F,EAAAiJ,GAIA,OAHAjJ,EAAAkJ,wBAAA,WACA,OAAAD,EAAAE,WAEAF,EC3ZO,SAAAG,EAAAhN,GACP,IAAA+C,EAAA,IAAmBjD,EAAaE,GAEhCyG,EAAA,SAAAwG,GAGA,IAFA,IAAAC,EAAA,GAEA/K,EAAA,EAAoBA,EAAAC,UAAAC,OAAuBF,IAC3C+K,EAAA/K,EAAA,GAAAC,UAAAD,GAGA,OAAAY,EAAAd,yBAAAkL,MAAApK,EAAA,CAAAkK,GAAAG,OAAAF,KAGA1L,EAAAxB,EAAAwB,WAMA,OALAL,OAAAqJ,UAAA6C,yBAAA7L,EAAwD0B,GACxD/B,OAAAqJ,UAAA8C,+BAAA9L,EAAA,IAAkE0H,EAAiBzC,IACnFtF,OAAAqJ,UAAA+C,sBAAA/L,EAAA,IAAyDyK,EAAYxF,IAErE,IAAM/B,EAAiBlD,EAAAiF,GACvBA,EArBA+G,EAAAjH,EAAAkH,EAAA,8BAAAT","file":"static/js/50.f7f989d3.chunk.js","sourcesContent":["var STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\n\nvar WorkerManager =\n/** @class */\nfunction () {\n  function WorkerManager(defaults) {\n    var _this = this;\n\n    this._defaults = defaults;\n    this._worker = null;\n    this._idleCheckInterval = setInterval(function () {\n      return _this._checkIfIdle();\n    }, 30 * 1000);\n    this._lastUsedTime = 0;\n    this._configChangeListener = this._defaults.onDidChange(function () {\n      return _this._stopWorker();\n    });\n  }\n\n  WorkerManager.prototype.dispose = function () {\n    clearInterval(this._idleCheckInterval);\n\n    this._configChangeListener.dispose();\n\n    this._stopWorker();\n  };\n\n  WorkerManager.prototype._stopWorker = function () {\n    if (this._worker) {\n      this._worker.dispose();\n\n      this._worker = null;\n    }\n\n    this._client = null;\n  };\n\n  WorkerManager.prototype._checkIfIdle = function () {\n    if (!this._worker) {\n      return;\n    }\n\n    var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n      this._stopWorker();\n    }\n  };\n\n  WorkerManager.prototype._getClient = function () {\n    this._lastUsedTime = Date.now();\n\n    if (!this._client) {\n      this._worker = monaco.editor.createWebWorker({\n        // module that exports the create() method and returns a `GreyCatWorker` instance\n        moduleId: 'greycat.worker',\n        label: this._defaults.languageId,\n        // passed in to the create() method\n        createData: {\n          languageId: this._defaults.languageId,\n          languageSettings: this._defaults.settings,\n          types: this._defaults.gcTypes,\n          functions: this._defaults.gcFunctions\n        }\n      });\n      this._client = this._worker.getProxy();\n    }\n\n    return this._client;\n  };\n\n  WorkerManager.prototype.getLanguageServiceWorker = function () {\n    var _this = this;\n\n    var resources = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      resources[_i] = arguments[_i];\n    }\n\n    var _client;\n\n    return toShallowCancelPromise(this._getClient().then(function (client) {\n      return _client = client;\n    }).then(function () {\n      if (_this._worker) {\n        _this._worker.withSyncedResources(resources);\n      }\n    }).then(function () {\n      return _client;\n    }));\n  };\n\n  return WorkerManager;\n}();\n\nexport default WorkerManager;\n\nfunction toShallowCancelPromise(p) {\n  var completeCallback = function completeCallback() {\n    /*noop*/\n  };\n\n  var errorCallback = function errorCallback() {\n    /*noop*/\n  };\n\n  var r = new monaco.Promise(function (c, e) {\n    completeCallback = c;\n    errorCallback = e;\n  }, function () {});\n  p.then(completeCallback, errorCallback);\n  return r;\n}","import * as ls from 'vscode-languageserver-types';\nvar Range = monaco.Range;\nexport var monarchTokens = {\n  // Set defaultToken to invalid to see what you do not tokenize yet\n  defaultToken: 'invalid',\n  keywords: ['type', 'function', 'var', 'new', 'gnew', 'return', 'null', 'this', 'false', 'true', 'foreach', 'repeat', 'static', 'private', 'if', 'then', 'else'],\n  typeKeywords: ['string', 'string_array', 'int', 'bool', 'long', 'double', 'long_array', 'node', 'node_array', 'int_array', 'ulong', 'ulong_array', 'reference'],\n  operators: ['%', '+', '-', '!', '=', '#', '==', '!=', '<=', '>='],\n  // we include these common regular expressions\n  symbols: /[;~!@#%\\^&*-+=|\\\\:`<>.?\\/]+/,\n  // javascript style strings\n  escapes: /\\\\(?:[btnfr\\\\\"'`]|[0-7][0-7]?|[0-3][0-7]{2})/,\n  // brackets\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.paren'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [// identifiers and keywords\n    [/[a-z_$][\\w$]*/, {\n      cases: {\n        '@typeKeywords': 'keyword',\n        '@keywords': 'keyword',\n        '@default': 'identifier'\n      }\n    }], [/[A-Z][\\w\\$]*/, 'type.identifier'], [/#[\\w$]*/, 'hash.identifier'], // whitespace\n    {\n      include: '@whitespace'\n    }, // delimiters and operators\n    [/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/@symbols/, {\n      cases: {\n        '@operators': 'operator',\n        '@default': ''\n      }\n    }], // numbers\n    [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'], [/\\d+/, 'number'], // delimiter: after number because of .\\d floats\n    [/[,.]/, 'delimiter'], // strings: recover on non-terminated strings\n    [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'], [/`([^`\\\\]|\\\\.)*$/, 'string.invalid'], [/\"/, 'string', '@string.\"'], [/'/, 'string', \"@string.'\"], [/`/, 'string', \"@string.'\"], // characters\n    [/'[^\\\\']'/, 'string'], [/(')(@escapes)(')/, ['string', 'string.escape', 'string']], [/'/, 'string.invalid']],\n    comment: [[/[^\\/*]+/, 'comment'], [/\\/\\*/, 'comment', '@push'], [/\\\\*\\//, 'comment', '@pop'], [/[\\/*]/, 'comment']],\n    string: [[/[^\\\\\"'`]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/[\"'`]/, {\n      cases: {\n        '$#==$S2': {\n          token: 'string',\n          next: '@pop'\n        },\n        '@default': 'string'\n      }\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, 'white'], [/\\/\\*/, 'comment', '@comment'], [/\\/\\/.*$/, 'comment']]\n  }\n}; // --- diagnostics --- ---\n\nvar DiagnosticAdapter =\n/** @class */\nfunction () {\n  function DiagnosticAdapter(_languageId, _worker) {\n    var _this = this;\n\n    this._languageId = _languageId;\n    this._worker = _worker;\n    this._disposables = [];\n    this._listener = {};\n\n    var onModelAdd = function onModelAdd(model) {\n      var modeId = model.getModeId();\n\n      if (modeId !== _this._languageId) {\n        return;\n      }\n\n      var handle;\n      _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n        clearTimeout(handle);\n        handle = setTimeout(function () {\n          return _this._doValidate(model.uri, modeId);\n        }, 500);\n      });\n\n      _this._doValidate(model.uri, modeId);\n    };\n\n    var onModelRemoved = function onModelRemoved(model) {\n      monaco.editor.setModelMarkers(model, _this._languageId, []);\n      var uriStr = model.uri.toString();\n      var listener = _this._listener[uriStr];\n\n      if (listener) {\n        listener.dispose();\n        delete _this._listener[uriStr];\n      }\n    };\n\n    this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n\n    this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n\n    this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n\n    this._disposables.push({\n      dispose: function dispose() {\n        Object.keys(_this._listener).forEach(function (k) {\n          _this._listener[k].dispose();\n        });\n      }\n    });\n\n    monaco.editor.getModels().forEach(onModelAdd);\n  }\n\n  DiagnosticAdapter.prototype.dispose = function () {\n    this._disposables.forEach(function (d) {\n      return d && d.dispose();\n    });\n\n    this._disposables = [];\n  };\n\n  DiagnosticAdapter.prototype._doValidate = function (resource, languageId) {\n    this._worker(resource).then(function (worker) {\n      if (!monaco.editor.getModel(resource)) {\n        // model was disposed in the meantime\n        return null;\n      }\n\n      return worker.doValidation(resource.toString());\n    }).then(function (diagnostics) {\n      if (diagnostics) {\n        var markers = diagnostics.map(function (d) {\n          return toDiagnostics(resource, d);\n        });\n        monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n      }\n    }).done(undefined, function (err) {\n      // tslint:disable-next-line:no-console\n      console.error(err);\n    });\n  };\n\n  return DiagnosticAdapter;\n}();\n\nexport { DiagnosticAdapter };\n\nfunction toSeverity(lsSeverity) {\n  switch (lsSeverity) {\n    case ls.DiagnosticSeverity.Error:\n      return monaco.MarkerSeverity.Error;\n\n    case ls.DiagnosticSeverity.Warning:\n      return monaco.MarkerSeverity.Warning;\n\n    case ls.DiagnosticSeverity.Information:\n    case ls.DiagnosticSeverity.Hint:\n    default:\n      return monaco.MarkerSeverity.Info;\n  }\n}\n\nfunction toDiagnostics(resource, diag) {\n  var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n  return {\n    severity: toSeverity(diag.severity),\n    startLineNumber: diag.range.start.line,\n    startColumn: diag.range.start.character,\n    endLineNumber: diag.range.end.line,\n    endColumn: diag.range.end.character + 1,\n    message: diag.message,\n    code: code,\n    source: diag.source\n  };\n} // --- completion ------\n\n\nfunction fromPosition(position) {\n  if (!position) {\n    return void 0;\n  }\n\n  return {\n    character: position.column - 1,\n    line: position.lineNumber - 1\n  };\n}\n\nfunction toRange(range) {\n  if (!range) {\n    return void 0;\n  }\n\n  return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\n\nfunction toCompletionItemKind(kind) {\n  var mItemKind = monaco.languages.CompletionItemKind;\n\n  switch (kind) {\n    case ls.CompletionItemKind.Text:\n      return mItemKind.Text;\n\n    case ls.CompletionItemKind.Method:\n      return mItemKind.Method;\n\n    case ls.CompletionItemKind.Function:\n      return mItemKind.Function;\n\n    case ls.CompletionItemKind.Constructor:\n      return mItemKind.Constructor;\n\n    case ls.CompletionItemKind.Field:\n      return mItemKind.Field;\n\n    case ls.CompletionItemKind.Variable:\n      return mItemKind.Variable;\n\n    case ls.CompletionItemKind.Class:\n      return mItemKind.Class;\n\n    case ls.CompletionItemKind.Interface:\n      return mItemKind.Interface;\n\n    case ls.CompletionItemKind.Module:\n      return mItemKind.Module;\n\n    case ls.CompletionItemKind.Property:\n      return mItemKind.Property;\n\n    case ls.CompletionItemKind.Unit:\n      return mItemKind.Unit;\n\n    case ls.CompletionItemKind.Value:\n      return mItemKind.Value;\n\n    case ls.CompletionItemKind.Enum:\n      return mItemKind.Enum;\n\n    case ls.CompletionItemKind.Keyword:\n      return mItemKind.Keyword;\n\n    case ls.CompletionItemKind.Snippet:\n      return mItemKind.Snippet;\n\n    case ls.CompletionItemKind.Color:\n      return mItemKind.Color;\n\n    case ls.CompletionItemKind.File:\n      return mItemKind.File;\n\n    case ls.CompletionItemKind.Reference:\n      return mItemKind.Reference;\n  }\n\n  return mItemKind.Property;\n}\n\nvar CompletionAdapter =\n/** @class */\nfunction () {\n  function CompletionAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n    get: function get() {\n      return [':', '.'];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      var pos = fromPosition(position);\n\n      if (pos) {\n        return worker.doComplete(resource.toString(), pos);\n      }\n\n      return {\n        isIncomplete: false,\n        items: []\n      };\n    }).then(function (cList) {\n      var items = cList.items.map(function (entry) {\n        var item = {\n          label: entry.label,\n          insertText: entry.insertText,\n          sortText: entry.sortText,\n          filterText: entry.filterText,\n          documentation: entry.documentation,\n          detail: entry.detail,\n          kind: toCompletionItemKind(entry.kind)\n        };\n\n        if (entry.textEdit) {\n          item.range = toRange(entry.textEdit.range);\n          item.insertText = entry.textEdit.newText;\n        }\n\n        if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n          item.insertText = {\n            value: item.insertText\n          };\n        }\n\n        return item;\n      });\n      return {\n        isIncomplete: cList.isIncomplete,\n        items: items\n      };\n    }));\n  };\n\n  return CompletionAdapter;\n}();\n\nexport { CompletionAdapter }; // ---- hover ----\n\nvar HoverAdapter =\n/** @class */\nfunction () {\n  function HoverAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  HoverAdapter.prototype.provideHover = function (model, position, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.doHover(resource.toString(), fromPosition(position));\n    }).then(function (info) {\n      if (!info) {\n        return;\n      }\n\n      return {\n        range: toRange(info.range),\n        contents: toMarkedStringArray(info.contents)\n      };\n    }));\n  };\n\n  return HoverAdapter;\n}();\n\nexport { HoverAdapter };\n\nfunction toMarkedStringArray(contents) {\n  if (!contents) {\n    return void 0;\n  }\n\n  if (Array.isArray(contents)) {\n    return contents.map(toMarkdownString);\n  }\n\n  return [toMarkdownString(contents)];\n}\n\nfunction toMarkdownString(entry) {\n  if (typeof entry === 'string') {\n    return {\n      value: entry\n    };\n  }\n\n  if (isMarkupContent(entry)) {\n    if (entry.kind === 'plaintext') {\n      return {\n        value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n      };\n    }\n\n    return {\n      value: entry.value\n    };\n  }\n\n  return {\n    value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n'\n  };\n}\n\nfunction isMarkupContent(thing) {\n  return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\n\n\nfunction wireCancellationToken(token, promise) {\n  token.onCancellationRequested(function () {\n    return promise.cancel();\n  });\n  return promise;\n}","import WorkerManager from './workerManager';\nimport { CompletionAdapter, DiagnosticAdapter, HoverAdapter, monarchTokens } from './languageFeatures';\nexport function setupMode(defaults) {\n  var client = new WorkerManager(defaults);\n\n  var worker = function worker(first) {\n    var more = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      more[_i - 1] = arguments[_i];\n    }\n\n    return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n  };\n\n  var languageId = defaults.languageId;\n  monaco.languages.setMonarchTokensProvider(languageId, monarchTokens);\n  monaco.languages.registerCompletionItemProvider(languageId, new CompletionAdapter(worker));\n  monaco.languages.registerHoverProvider(languageId, new HoverAdapter(worker)); // tslint:disable-next-line:no-unused-expression\n\n  new DiagnosticAdapter(languageId, worker);\n  return worker;\n}"],"sourceRoot":""}