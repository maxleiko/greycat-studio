{"version":3,"sources":["../../js/packages/greycat-lang-monaco/dist/esm/workerManager.js","../../js/packages/greycat-lang-monaco/dist/esm/languageFeatures.js","../../js/packages/greycat-lang-monaco/dist/esm/gcMode.js"],"names":["workerManager","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","clearInterval","_client","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","settings","types","gcTypes","functions","gcFunctions","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","p","completeCallback","errorCallback","r","Promise","c","e","then","toShallowCancelPromise","client","withSyncedResources","Range","monarchTokens","defaultToken","keywords","typeKeywords","operators","symbols","escapes","brackets","open","close","token","tokenizer","root","cases","@typeKeywords","@keywords","@default","include","@operators","comment","string","$#==$S2","next","whitespace","DiagnosticAdapter","_languageId","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","Object","keys","forEach","k","_","getModels","d","resource","worker","getModel","doValidation","diagnostics","markers","map","diag","code","String","severity","lsSeverity","main","Error","MarkerSeverity","Warning","Information","Hint","Info","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","toDiagnostics","done","undefined","err","console","error","fromPosition","position","column","lineNumber","toRange","languageFeatures_CompletionAdapter","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","wireCancellationToken","pos","doComplete","isIncomplete","items","cList","entry","item","insertText","sortText","filterText","documentation","detail","kind","mItemKind","languages","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toCompletionItemKind","textEdit","newText","insertTextFormat","value","HoverAdapter","provideHover","doHover","info","contents","Array","isArray","toMarkdownString","toMarkedStringArray","thing","replace","language","promise","onCancellationRequested","cancel","setupMode","first","more","apply","concat","setMonarchTokensProvider","registerCompletionItemProvider","registerHoverProvider","__webpack_require__","__webpack_exports__"],"mappings":"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","file":"static/js/49.66eab144.chunk.js","sourcesContent":["var STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `GreyCatWorker` instance\n                moduleId: 'greycat.worker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageId: this._defaults.languageId,\n                    languageSettings: this._defaults.settings,\n                    types: this._defaults.gcTypes,\n                    functions: this._defaults.gcFunctions,\n                },\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient()\n            .then(function (client) { return (_client = client); })\n            .then(function () {\n            if (_this._worker) {\n                _this._worker.withSyncedResources(resources);\n            }\n        })\n            .then(function () { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport default WorkerManager;\nfunction toShallowCancelPromise(p) {\n    var completeCallback = function () {\n        /*noop*/\n    };\n    var errorCallback = function () {\n        /*noop*/\n    };\n    var r = new monaco.Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n//# sourceMappingURL=workerManager.js.map","import * as ls from 'vscode-languageserver-types';\nvar Range = monaco.Range;\nexport var monarchTokens = {\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    defaultToken: 'invalid',\n    keywords: [\n        'type',\n        'function',\n        'var',\n        'new',\n        'gnew',\n        'return',\n        'null',\n        'this',\n        'false',\n        'true',\n        'foreach',\n        'repeat',\n        'static',\n        'private',\n        'if',\n        'then',\n        'else',\n    ],\n    typeKeywords: [\n        'string',\n        'string_array',\n        'int',\n        'int_array',\n        'bool',\n        'bool_array',\n        'long',\n        'long_array',\n        'double',\n        'double_array',\n        'node',\n        'node_array',\n        'ulong',\n        'ulong_array',\n        'reference',\n        'any',\n        'any_node',\n    ],\n    operators: ['%', '+', '-', '!', '=', '#', '==', '!=', '<=', '>='],\n    // we include these common regular expressions\n    symbols: /[;~!@#%\\^&*-+=|\\\\:`<>.?\\/]+/,\n    // javascript style strings\n    escapes: /\\\\(?:[btnfr\\\\\"'`]|[0-7][0-7]?|[0-3][0-7]{2})/,\n    // brackets\n    brackets: [\n        {\n            open: '{',\n            close: '}',\n            token: 'delimiter.curly',\n        },\n        {\n            open: '(',\n            close: ')',\n            token: 'delimiter.paren',\n        },\n        {\n            open: '[',\n            close: ']',\n            token: 'delimiter.square',\n        },\n        {\n            open: '<',\n            close: '>',\n            token: 'delimiter.angle',\n        },\n    ],\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [\n                /[a-z_$][\\w$]*/,\n                {\n                    cases: {\n                        '@typeKeywords': 'keyword',\n                        '@keywords': 'keyword',\n                        '@default': 'identifier',\n                    },\n                },\n            ],\n            [/[A-Z][\\w\\$]*/, 'type.identifier'],\n            [/#[\\w$]*/, 'hash.identifier'],\n            // whitespace\n            {\n                include: '@whitespace',\n            },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [\n                /@symbols/,\n                {\n                    cases: {\n                        '@operators': 'operator',\n                        '@default': '',\n                    },\n                },\n            ],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[,.]/, 'delimiter'],\n            // strings: recover on non-terminated strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/`([^`\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', \"@string.'\"],\n            [/`/, 'string', \"@string.'\"],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [/\\\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment'],\n        ],\n        string: [\n            [/[^\\\\\"'`]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [\n                /[\"'`]/,\n                {\n                    cases: {\n                        '$#==$S2': {\n                            token: 'string',\n                            next: '@pop',\n                        },\n                        '@default': 'string',\n                    },\n                },\n            ],\n        ],\n        whitespace: [[/[ \\t\\r\\n]+/, 'white'], [/\\/\\*/, 'comment', '@comment'], [/\\/\\/.*$/, 'comment']],\n    },\n};\n// --- diagnostics --- ---\nvar DiagnosticAdapter = /** @class */ (function () {\n    function DiagnosticAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = {};\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push({\n            dispose: function () {\n                Object.keys(_this._listener).forEach(function (k) {\n                    _this._listener[k].dispose();\n                });\n            },\n        });\n        defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource)\n            .then(function (worker) {\n            if (!monaco.editor.getModel(resource)) {\n                // model was disposed in the meantime\n                return null;\n            }\n            return worker.doValidation(resource.toString());\n        })\n            .then(function (diagnostics) {\n            if (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            }\n        })\n            .done(undefined, function (err) {\n            // tslint:disable-next-line:no-console\n            console.error(err);\n        });\n    };\n    return DiagnosticAdapter;\n}());\nexport { DiagnosticAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error:\n            return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning:\n            return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information:\n        case ls.DiagnosticSeverity.Hint:\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line,\n        startColumn: diag.range.start.character,\n        endLineNumber: diag.range.end.line,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source,\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text:\n            return mItemKind.Text;\n        case ls.CompletionItemKind.Method:\n            return mItemKind.Method;\n        case ls.CompletionItemKind.Function:\n            return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor:\n            return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field:\n            return mItemKind.Field;\n        case ls.CompletionItemKind.Variable:\n            return mItemKind.Variable;\n        case ls.CompletionItemKind.Class:\n            return mItemKind.Class;\n        case ls.CompletionItemKind.Interface:\n            return mItemKind.Interface;\n        case ls.CompletionItemKind.Module:\n            return mItemKind.Module;\n        case ls.CompletionItemKind.Property:\n            return mItemKind.Property;\n        case ls.CompletionItemKind.Unit:\n            return mItemKind.Unit;\n        case ls.CompletionItemKind.Value:\n            return mItemKind.Value;\n        case ls.CompletionItemKind.Enum:\n            return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword:\n            return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet:\n            return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color:\n            return mItemKind.Color;\n        case ls.CompletionItemKind.File:\n            return mItemKind.File;\n        case ls.CompletionItemKind.Reference:\n            return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [':', '.'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource)\n            .then(function (worker) {\n            var pos = fromPosition(position);\n            if (pos) {\n                return worker.doComplete(resource.toString(), pos);\n            }\n            return { isIncomplete: false, items: [] };\n        })\n            .then(function (cList) {\n            var items = cList.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: cList.isIncomplete,\n                items: items,\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\n// ---- hover ----\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource)\n            .then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        })\n            .then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents),\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry,\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'),\n            };\n        }\n        return {\n            value: entry.value,\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    token.onCancellationRequested(function () { return promise.cancel(); });\n    return promise;\n}\n//# sourceMappingURL=languageFeatures.js.map","import WorkerManager from './workerManager';\nimport { CompletionAdapter, DiagnosticAdapter, HoverAdapter, monarchTokens } from './languageFeatures';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function (first) {\n        var more = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            more[_i - 1] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n    };\n    var languageId = defaults.languageId;\n    monaco.languages.setMonarchTokensProvider(languageId, monarchTokens);\n    monaco.languages.registerCompletionItemProvider(languageId, new CompletionAdapter(worker));\n    monaco.languages.registerHoverProvider(languageId, new HoverAdapter(worker));\n    // tslint:disable-next-line:no-unused-expression\n    new DiagnosticAdapter(languageId, worker, defaults);\n    return worker;\n}\n//# sourceMappingURL=gcMode.js.map"],"sourceRoot":""}