{"version":3,"sources":["../../../node_modules/vscode-languageserver-types/lib/esm/main.js"],"names":["Position","Range","Location","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","__webpack_require__","d","__webpack_exports__","CompletionItemKind","InsertTextFormat","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","red","green","blue","alpha","color","label","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","_i","arguments","length","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","options","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","this","prototype","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","Object","_workspaceEdit","forEach","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","version","languageId","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check"],"mappings":"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","file":"static/js/56.34b8203b.chunk.js","sourcesContent":["/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\n\nexport var Position;\n\n(function (Position) {\n  /**\r\n   * Creates a new Position literal from the given line and character.\r\n   * @param line The position's line.\r\n   * @param character The position's character.\r\n   */\n  function create(line, character) {\n    return {\n      line: line,\n      character: character\n    };\n  }\n\n  Position.create = create;\n  /**\r\n   * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n  }\n\n  Position.is = is;\n})(Position || (Position = {}));\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\n\n\nexport var Range;\n\n(function (Range) {\n  function create(one, two, three, four) {\n    if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n      return {\n        start: Position.create(one, two),\n        end: Position.create(three, four)\n      };\n    } else if (Position.is(one) && Position.is(two)) {\n      return {\n        start: one,\n        end: two\n      };\n    } else {\n      throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n    }\n  }\n\n  Range.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n\n  Range.is = is;\n})(Range || (Range = {}));\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\n\n\nexport var Location;\n\n(function (Location) {\n  /**\r\n   * Creates a Location literal.\r\n   * @param uri The location's uri.\r\n   * @param range The location's range.\r\n   */\n  function create(uri, range) {\n    return {\n      uri: uri,\n      range: range\n    };\n  }\n\n  Location.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n\n  Location.is = is;\n})(Location || (Location = {}));\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\n\n\nexport var Color;\n\n(function (Color) {\n  /**\r\n   * Creates a new Color literal.\r\n   */\n  function create(red, green, blue, alpha) {\n    return {\n      red: red,\n      green: green,\n      blue: blue,\n      alpha: alpha\n    };\n  }\n\n  Color.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.number(candidate.red) && Is.number(candidate.green) && Is.number(candidate.blue) && Is.number(candidate.alpha);\n  }\n\n  Color.is = is;\n})(Color || (Color = {}));\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\n\n\nexport var ColorInformation;\n\n(function (ColorInformation) {\n  /**\r\n   * Creates a new ColorInformation literal.\r\n   */\n  function create(range, color) {\n    return {\n      range: range,\n      color: color\n    };\n  }\n\n  ColorInformation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Range.is(candidate.range) && Color.is(candidate.color);\n  }\n\n  ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\n\n\nexport var ColorPresentation;\n\n(function (ColorPresentation) {\n  /**\r\n   * Creates a new ColorInformation literal.\r\n   */\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label: label,\n      textEdit: textEdit,\n      additionalTextEdits: additionalTextEdits\n    };\n  }\n\n  ColorPresentation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n\n  ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\r\n * Enum of known range kinds\r\n */\n\n\nexport var FoldingRangeKind;\n\n(function (FoldingRangeKind) {\n  /**\r\n   * Folding range for a comment\r\n   */\n  FoldingRangeKind[\"Comment\"] = \"comment\";\n  /**\r\n   * Folding range for a imports or includes\r\n   */\n\n  FoldingRangeKind[\"Imports\"] = \"imports\";\n  /**\r\n   * Folding range for a region (e.g. `#region`)\r\n   */\n\n  FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\n\n\nexport var FoldingRange;\n\n(function (FoldingRange) {\n  /**\r\n   * Creates a new FoldingRange literal.\r\n   */\n  function create(startLine, endLine, startCharacter, endCharacter, kind) {\n    var result = {\n      startLine: startLine,\n      endLine: endLine\n    };\n\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  FoldingRange.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.number(candidate.startLine) && Is.number(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n\n  FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\n\n\nexport var DiagnosticRelatedInformation;\n\n(function (DiagnosticRelatedInformation) {\n  /**\r\n   * Creates a new DiagnosticRelatedInformation literal.\r\n   */\n  function create(location, message) {\n    return {\n      location: location,\n      message: message\n    };\n  }\n\n  DiagnosticRelatedInformation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n\n  DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\r\n * The diagnostic's severity.\r\n */\n\n\nexport var DiagnosticSeverity;\n\n(function (DiagnosticSeverity) {\n  /**\r\n   * Reports an error.\r\n   */\n  DiagnosticSeverity.Error = 1;\n  /**\r\n   * Reports a warning.\r\n   */\n\n  DiagnosticSeverity.Warning = 2;\n  /**\r\n   * Reports an information.\r\n   */\n\n  DiagnosticSeverity.Information = 3;\n  /**\r\n   * Reports a hint.\r\n   */\n\n  DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\n\n\nexport var Diagnostic;\n\n(function (Diagnostic) {\n  /**\r\n   * Creates a new Diagnostic literal.\r\n   */\n  function create(range, message, severity, code, source, relatedInformation) {\n    var result = {\n      range: range,\n      message: message\n    };\n\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n\n    return result;\n  }\n\n  Diagnostic.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n\n  Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\n\n\nexport var Command;\n\n(function (Command) {\n  /**\r\n   * Creates a new Command literal.\r\n   */\n  function create(title, command) {\n    var args = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n\n    var result = {\n      title: title,\n      command: command\n    };\n\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n\n    return result;\n  }\n\n  Command.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n\n  Command.is = is;\n})(Command || (Command = {}));\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\n\n\nexport var TextEdit;\n\n(function (TextEdit) {\n  /**\r\n   * Creates a replace text edit.\r\n   * @param range The range of text to be replaced.\r\n   * @param newText The new text.\r\n   */\n  function replace(range, newText) {\n    return {\n      range: range,\n      newText: newText\n    };\n  }\n\n  TextEdit.replace = replace;\n  /**\r\n   * Creates a insert text edit.\r\n   * @param position The position to insert the text at.\r\n   * @param newText The text to be inserted.\r\n   */\n\n  function insert(position, newText) {\n    return {\n      range: {\n        start: position,\n        end: position\n      },\n      newText: newText\n    };\n  }\n\n  TextEdit.insert = insert;\n  /**\r\n   * Creates a delete text edit.\r\n   * @param range The range of text to be deleted.\r\n   */\n\n  function del(range) {\n    return {\n      range: range,\n      newText: ''\n    };\n  }\n\n  TextEdit.del = del;\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n\n  TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\n\n\nexport var TextDocumentEdit;\n\n(function (TextDocumentEdit) {\n  /**\r\n   * Creates a new `TextDocumentEdit`\r\n   */\n  function create(textDocument, edits) {\n    return {\n      textDocument: textDocument,\n      edits: edits\n    };\n  }\n\n  TextDocumentEdit.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && VersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n\n  TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\n\nexport var CreateFile;\n\n(function (CreateFile) {\n  function create(uri, options) {\n    var result = {\n      kind: 'create',\n      uri: uri\n    };\n\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n\n    return result;\n  }\n\n  CreateFile.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists)));\n  }\n\n  CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\n\nexport var RenameFile;\n\n(function (RenameFile) {\n  function create(oldUri, newUri, options) {\n    var result = {\n      kind: 'rename',\n      oldUri: oldUri,\n      newUri: newUri\n    };\n\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n      result.options = options;\n    }\n\n    return result;\n  }\n\n  RenameFile.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists)));\n  }\n\n  RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\n\nexport var DeleteFile;\n\n(function (DeleteFile) {\n  function create(uri, options) {\n    var result = {\n      kind: 'delete',\n      uri: uri\n    };\n\n    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\n      result.options = options;\n    }\n\n    return result;\n  }\n\n  DeleteFile.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists)));\n  }\n\n  DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\n\nexport var WorkspaceEdit;\n\n(function (WorkspaceEdit) {\n  function is(value) {\n    var candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\n      if (Is.string(change.kind)) {\n        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n      } else {\n        return TextDocumentEdit.is(change);\n      }\n    }));\n  }\n\n  WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\n\nvar TextEditChangeImpl =\n/** @class */\nfunction () {\n  function TextEditChangeImpl(edits) {\n    this.edits = edits;\n  }\n\n  TextEditChangeImpl.prototype.insert = function (position, newText) {\n    this.edits.push(TextEdit.insert(position, newText));\n  };\n\n  TextEditChangeImpl.prototype.replace = function (range, newText) {\n    this.edits.push(TextEdit.replace(range, newText));\n  };\n\n  TextEditChangeImpl.prototype.delete = function (range) {\n    this.edits.push(TextEdit.del(range));\n  };\n\n  TextEditChangeImpl.prototype.add = function (edit) {\n    this.edits.push(edit);\n  };\n\n  TextEditChangeImpl.prototype.all = function () {\n    return this.edits;\n  };\n\n  TextEditChangeImpl.prototype.clear = function () {\n    this.edits.splice(0, this.edits.length);\n  };\n\n  return TextEditChangeImpl;\n}();\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\n\n\nvar WorkspaceChange =\n/** @class */\nfunction () {\n  function WorkspaceChange(workspaceEdit) {\n    var _this = this;\n\n    this._textEditChanges = Object.create(null);\n\n    if (workspaceEdit) {\n      this._workspaceEdit = workspaceEdit;\n\n      if (workspaceEdit.documentChanges) {\n        workspaceEdit.documentChanges.forEach(function (change) {\n          if (TextDocumentEdit.is(change)) {\n            var textEditChange = new TextEditChangeImpl(change.edits);\n            _this._textEditChanges[change.textDocument.uri] = textEditChange;\n          }\n        });\n      } else if (workspaceEdit.changes) {\n        Object.keys(workspaceEdit.changes).forEach(function (key) {\n          var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n          _this._textEditChanges[key] = textEditChange;\n        });\n      }\n    }\n  }\n\n  Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n    /**\r\n     * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n     * use to be returned from a workspace edit operation like rename.\r\n     */\n    get: function get() {\n      return this._workspaceEdit;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  WorkspaceChange.prototype.getTextEditChange = function (key) {\n    if (VersionedTextDocumentIdentifier.is(key)) {\n      if (!this._workspaceEdit) {\n        this._workspaceEdit = {\n          documentChanges: []\n        };\n      }\n\n      if (!this._workspaceEdit.documentChanges) {\n        throw new Error('Workspace edit is not configured for document changes.');\n      }\n\n      var textDocument = key;\n      var result = this._textEditChanges[textDocument.uri];\n\n      if (!result) {\n        var edits = [];\n        var textDocumentEdit = {\n          textDocument: textDocument,\n          edits: edits\n        };\n\n        this._workspaceEdit.documentChanges.push(textDocumentEdit);\n\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[textDocument.uri] = result;\n      }\n\n      return result;\n    } else {\n      if (!this._workspaceEdit) {\n        this._workspaceEdit = {\n          changes: Object.create(null)\n        };\n      }\n\n      if (!this._workspaceEdit.changes) {\n        throw new Error('Workspace edit is not configured for normal text edit changes.');\n      }\n\n      var result = this._textEditChanges[key];\n\n      if (!result) {\n        var edits = [];\n        this._workspaceEdit.changes[key] = edits;\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[key] = result;\n      }\n\n      return result;\n    }\n  };\n\n  WorkspaceChange.prototype.createFile = function (uri, options) {\n    this.checkDocumentChanges();\n\n    this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\n  };\n\n  WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\n    this.checkDocumentChanges();\n\n    this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\n  };\n\n  WorkspaceChange.prototype.deleteFile = function (uri, options) {\n    this.checkDocumentChanges();\n\n    this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\n  };\n\n  WorkspaceChange.prototype.checkDocumentChanges = function () {\n    if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\n      throw new Error('Workspace edit is not configured for document changes.');\n    }\n  };\n\n  return WorkspaceChange;\n}();\n\nexport { WorkspaceChange };\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\n\nexport var TextDocumentIdentifier;\n\n(function (TextDocumentIdentifier) {\n  /**\r\n   * Creates a new TextDocumentIdentifier literal.\r\n   * @param uri The document's uri.\r\n   */\n  function create(uri) {\n    return {\n      uri: uri\n    };\n  }\n\n  TextDocumentIdentifier.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n\n  TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\n\n\nexport var VersionedTextDocumentIdentifier;\n\n(function (VersionedTextDocumentIdentifier) {\n  /**\r\n   * Creates a new VersionedTextDocumentIdentifier literal.\r\n   * @param uri The document's uri.\r\n   * @param uri The document's text.\r\n   */\n  function create(uri, version) {\n    return {\n      uri: uri,\n      version: version\n    };\n  }\n\n  VersionedTextDocumentIdentifier.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\n  }\n\n  VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\n\n\nexport var TextDocumentItem;\n\n(function (TextDocumentItem) {\n  /**\r\n   * Creates a new TextDocumentItem literal.\r\n   * @param uri The document's uri.\r\n   * @param languageId The document's language identifier.\r\n   * @param version The document's version number.\r\n   * @param text The document's text.\r\n   */\n  function create(uri, languageId, version, text) {\n    return {\n      uri: uri,\n      languageId: languageId,\n      version: version,\n      text: text\n    };\n  }\n\n  TextDocumentItem.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n  }\n\n  TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\n\n\nexport var MarkupKind;\n\n(function (MarkupKind) {\n  /**\r\n   * Plain text is supported as a content format\r\n   */\n  MarkupKind.PlainText = 'plaintext';\n  /**\r\n   * Markdown is supported as a content format\r\n   */\n\n  MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n\n(function (MarkupKind) {\n  /**\r\n   * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n  }\n\n  MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\n\nexport var MarkupContent;\n\n(function (MarkupContent) {\n  /**\r\n   * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n\n  MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\r\n * The kind of a completion entry.\r\n */\n\n\nexport var CompletionItemKind;\n\n(function (CompletionItemKind) {\n  CompletionItemKind.Text = 1;\n  CompletionItemKind.Method = 2;\n  CompletionItemKind.Function = 3;\n  CompletionItemKind.Constructor = 4;\n  CompletionItemKind.Field = 5;\n  CompletionItemKind.Variable = 6;\n  CompletionItemKind.Class = 7;\n  CompletionItemKind.Interface = 8;\n  CompletionItemKind.Module = 9;\n  CompletionItemKind.Property = 10;\n  CompletionItemKind.Unit = 11;\n  CompletionItemKind.Value = 12;\n  CompletionItemKind.Enum = 13;\n  CompletionItemKind.Keyword = 14;\n  CompletionItemKind.Snippet = 15;\n  CompletionItemKind.Color = 16;\n  CompletionItemKind.File = 17;\n  CompletionItemKind.Reference = 18;\n  CompletionItemKind.Folder = 19;\n  CompletionItemKind.EnumMember = 20;\n  CompletionItemKind.Constant = 21;\n  CompletionItemKind.Struct = 22;\n  CompletionItemKind.Event = 23;\n  CompletionItemKind.Operator = 24;\n  CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\n\n\nexport var InsertTextFormat;\n\n(function (InsertTextFormat) {\n  /**\r\n   * The primary text to be inserted is treated as a plain string.\r\n   */\n  InsertTextFormat.PlainText = 1;\n  /**\r\n   * The primary text to be inserted is treated as a snippet.\r\n   *\r\n   * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n   * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n   * the end of the snippet. Placeholders with equal identifiers are linked,\r\n   * that is typing in one will update others too.\r\n   *\r\n   * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n   */\n\n  InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\n\n\nexport var CompletionItem;\n\n(function (CompletionItem) {\n  /**\r\n   * Create a completion item and seed it with a label.\r\n   * @param label The completion item's label\r\n   */\n  function create(label) {\n    return {\n      label: label\n    };\n  }\n\n  CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\n\n\nexport var CompletionList;\n\n(function (CompletionList) {\n  /**\r\n   * Creates a new completion list.\r\n   *\r\n   * @param items The completion items.\r\n   * @param isIncomplete The list is not complete.\r\n   */\n  function create(items, isIncomplete) {\n    return {\n      items: items ? items : [],\n      isIncomplete: !!isIncomplete\n    };\n  }\n\n  CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\n\nexport var MarkedString;\n\n(function (MarkedString) {\n  /**\r\n   * Creates a marked string from plain text.\r\n   *\r\n   * @param plainText The plain text.\r\n   */\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n  }\n\n  MarkedString.fromPlainText = fromPlainText;\n  /**\r\n   * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n\n  MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\n\nexport var Hover;\n\n(function (Hover) {\n  /**\r\n   * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n\n  Hover.is = is;\n})(Hover || (Hover = {}));\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\n\n\nexport var ParameterInformation;\n\n(function (ParameterInformation) {\n  /**\r\n   * Creates a new parameter information literal.\r\n   *\r\n   * @param label A label string.\r\n   * @param documentation A doc string.\r\n   */\n  function create(label, documentation) {\n    return documentation ? {\n      label: label,\n      documentation: documentation\n    } : {\n      label: label\n    };\n  }\n\n  ParameterInformation.create = create;\n  ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\n\n\nexport var SignatureInformation;\n\n(function (SignatureInformation) {\n  function create(label, documentation) {\n    var parameters = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      parameters[_i - 2] = arguments[_i];\n    }\n\n    var result = {\n      label: label\n    };\n\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n\n    return result;\n  }\n\n  SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\r\n * A document highlight kind.\r\n */\n\n\nexport var DocumentHighlightKind;\n\n(function (DocumentHighlightKind) {\n  /**\r\n   * A textual occurrence.\r\n   */\n  DocumentHighlightKind.Text = 1;\n  /**\r\n   * Read-access of a symbol, like reading a variable.\r\n   */\n\n  DocumentHighlightKind.Read = 2;\n  /**\r\n   * Write-access of a symbol, like writing to a variable.\r\n   */\n\n  DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\n\n\nexport var DocumentHighlight;\n\n(function (DocumentHighlight) {\n  /**\r\n   * Create a DocumentHighlight object.\r\n   * @param range The range the highlight applies to.\r\n   */\n  function create(range, kind) {\n    var result = {\n      range: range\n    };\n\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\r\n * A symbol kind.\r\n */\n\n\nexport var SymbolKind;\n\n(function (SymbolKind) {\n  SymbolKind.File = 1;\n  SymbolKind.Module = 2;\n  SymbolKind.Namespace = 3;\n  SymbolKind.Package = 4;\n  SymbolKind.Class = 5;\n  SymbolKind.Method = 6;\n  SymbolKind.Property = 7;\n  SymbolKind.Field = 8;\n  SymbolKind.Constructor = 9;\n  SymbolKind.Enum = 10;\n  SymbolKind.Interface = 11;\n  SymbolKind.Function = 12;\n  SymbolKind.Variable = 13;\n  SymbolKind.Constant = 14;\n  SymbolKind.String = 15;\n  SymbolKind.Number = 16;\n  SymbolKind.Boolean = 17;\n  SymbolKind.Array = 18;\n  SymbolKind.Object = 19;\n  SymbolKind.Key = 20;\n  SymbolKind.Null = 21;\n  SymbolKind.EnumMember = 22;\n  SymbolKind.Struct = 23;\n  SymbolKind.Event = 24;\n  SymbolKind.Operator = 25;\n  SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n\nexport var SymbolInformation;\n\n(function (SymbolInformation) {\n  /**\r\n   * Creates a new symbol information literal.\r\n   *\r\n   * @param name The name of the symbol.\r\n   * @param kind The kind of the symbol.\r\n   * @param range The range of the location of the symbol.\r\n   * @param uri The resource of the location of symbol, defaults to the current document.\r\n   * @param containerName The name of the symbol containing the symbol.\r\n   */\n  function create(name, kind, range, uri, containerName) {\n    var result = {\n      name: name,\n      kind: kind,\n      location: {\n        uri: uri,\n        range: range\n      }\n    };\n\n    if (containerName) {\n      result.containerName = containerName;\n    }\n\n    return result;\n  }\n\n  SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\n\n\nvar DocumentSymbol =\n/** @class */\nfunction () {\n  function DocumentSymbol() {}\n\n  return DocumentSymbol;\n}();\n\nexport { DocumentSymbol };\n\n(function (DocumentSymbol) {\n  /**\r\n   * Creates a new symbol information literal.\r\n   *\r\n   * @param name The name of the symbol.\r\n   * @param detail The detail of the symbol.\r\n   * @param kind The kind of the symbol.\r\n   * @param range The range of the symbol.\r\n   * @param selectionRange The selectionRange of the symbol.\r\n   * @param children Children of the symbol.\r\n   */\n  function create(name, detail, kind, range, selectionRange, children) {\n    var result = {\n      name: name,\n      detail: detail,\n      kind: kind,\n      range: range,\n      selectionRange: selectionRange\n    };\n\n    if (children !== void 0) {\n      result.children = children;\n    }\n\n    return result;\n  }\n\n  DocumentSymbol.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children));\n  }\n\n  DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\r\n * A set of predefined code action kinds\r\n */\n\n\nexport var CodeActionKind;\n\n(function (CodeActionKind) {\n  /**\r\n   * Base kind for quickfix actions: 'quickfix'\r\n   */\n  CodeActionKind.QuickFix = 'quickfix';\n  /**\r\n   * Base kind for refactoring actions: 'refactor'\r\n   */\n\n  CodeActionKind.Refactor = 'refactor';\n  /**\r\n   * Base kind for refactoring extraction actions: 'refactor.extract'\r\n   *\r\n   * Example extract actions:\r\n   *\r\n   * - Extract method\r\n   * - Extract function\r\n   * - Extract variable\r\n   * - Extract interface from class\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorExtract = 'refactor.extract';\n  /**\r\n   * Base kind for refactoring inline actions: 'refactor.inline'\r\n   *\r\n   * Example inline actions:\r\n   *\r\n   * - Inline function\r\n   * - Inline variable\r\n   * - Inline constant\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorInline = 'refactor.inline';\n  /**\r\n   * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n   *\r\n   * Example rewrite actions:\r\n   *\r\n   * - Convert JavaScript function to class\r\n   * - Add or remove parameter\r\n   * - Encapsulate field\r\n   * - Make method static\r\n   * - Move method to base class\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n  /**\r\n   * Base kind for source actions: `source`\r\n   *\r\n   * Source code actions apply to the entire file.\r\n   */\n\n  CodeActionKind.Source = 'source';\n  /**\r\n   * Base kind for an organize imports source action: `source.organizeImports`\r\n   */\n\n  CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\n\n\nexport var CodeActionContext;\n\n(function (CodeActionContext) {\n  /**\r\n   * Creates a new CodeActionContext literal.\r\n   */\n  function create(diagnostics, only) {\n    var result = {\n      diagnostics: diagnostics\n    };\n\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n\n    return result;\n  }\n\n  CodeActionContext.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\n  }\n\n  CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n\nexport var CodeAction;\n\n(function (CodeAction) {\n  function create(title, commandOrEdit, kind) {\n    var result = {\n      title: title\n    };\n\n    if (Command.is(commandOrEdit)) {\n      result.command = commandOrEdit;\n    } else {\n      result.edit = commandOrEdit;\n    }\n\n    if (kind !== void null) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  CodeAction.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n\n  CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\n\n\nexport var CodeLens;\n\n(function (CodeLens) {\n  /**\r\n   * Creates a new CodeLens literal.\r\n   */\n  function create(range, data) {\n    var result = {\n      range: range\n    };\n    if (Is.defined(data)) result.data = data;\n    return result;\n  }\n\n  CodeLens.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n\n  CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\n\n\nexport var FormattingOptions;\n\n(function (FormattingOptions) {\n  /**\r\n   * Creates a new FormattingOptions literal.\r\n   */\n  function create(tabSize, insertSpaces) {\n    return {\n      tabSize: tabSize,\n      insertSpaces: insertSpaces\n    };\n  }\n\n  FormattingOptions.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n\n  FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\n\n\nvar DocumentLink =\n/** @class */\nfunction () {\n  function DocumentLink() {}\n\n  return DocumentLink;\n}();\n\nexport { DocumentLink };\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\n\n(function (DocumentLink) {\n  /**\r\n   * Creates a new DocumentLink literal.\r\n   */\n  function create(range, target, data) {\n    return {\n      range: range,\n      target: target,\n      data: data\n    };\n  }\n\n  DocumentLink.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n\n  DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n\n(function (TextDocument) {\n  /**\r\n   * Creates a new ITextDocument literal from the given uri and content.\r\n   * @param uri The document's uri.\r\n   * @param languageId  The document's language Id.\r\n   * @param content The document's content.\r\n   */\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n\n  TextDocument.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n\n  TextDocument.is = is;\n\n  function applyEdits(document, edits) {\n    var text = document.getText();\n    var sortedEdits = mergeSort(edits, function (a, b) {\n      var diff = a.range.start.line - b.range.start.line;\n\n      if (diff === 0) {\n        return a.range.start.character - b.range.start.character;\n      }\n\n      return diff;\n    });\n    var lastModifiedOffset = text.length;\n\n    for (var i = sortedEdits.length - 1; i >= 0; i--) {\n      var e = sortedEdits[i];\n      var startOffset = document.offsetAt(e.range.start);\n      var endOffset = document.offsetAt(e.range.end);\n\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error('Ovelapping edit');\n      }\n\n      lastModifiedOffset = startOffset;\n    }\n\n    return text;\n  }\n\n  TextDocument.applyEdits = applyEdits;\n\n  function mergeSort(data, compare) {\n    if (data.length <= 1) {\n      // sorted\n      return data;\n    }\n\n    var p = data.length / 2 | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n\n    while (leftIdx < left.length && rightIdx < right.length) {\n      var ret = compare(left[leftIdx], right[rightIdx]);\n\n      if (ret <= 0) {\n        // smaller_equal -> take left to preserve order\n        data[i++] = left[leftIdx++];\n      } else {\n        // greater -> take right\n        data[i++] = right[rightIdx++];\n      }\n    }\n\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\n/**\r\n * Represents reasons why a text document is saved.\r\n */\n\n\nexport var TextDocumentSaveReason;\n\n(function (TextDocumentSaveReason) {\n  /**\r\n   * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n   * or by an API call.\r\n   */\n  TextDocumentSaveReason.Manual = 1;\n  /**\r\n   * Automatic after a delay.\r\n   */\n\n  TextDocumentSaveReason.AfterDelay = 2;\n  /**\r\n   * When the editor lost focus.\r\n   */\n\n  TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\n\nvar FullTextDocument =\n/** @class */\nfunction () {\n  function FullTextDocument(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = null;\n  }\n\n  Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n    get: function get() {\n      return this._uri;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n    get: function get() {\n      return this._languageId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument.prototype, \"version\", {\n    get: function get() {\n      return this._version;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FullTextDocument.prototype.getText = function (range) {\n    if (range) {\n      var start = this.offsetAt(range.start);\n      var end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n\n    return this._content;\n  };\n\n  FullTextDocument.prototype.update = function (event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = null;\n  };\n\n  FullTextDocument.prototype.getLineOffsets = function () {\n    if (this._lineOffsets === null) {\n      var lineOffsets = [];\n      var text = this._content;\n      var isLineStart = true;\n\n      for (var i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n\n        var ch = text.charAt(i);\n        isLineStart = ch === '\\r' || ch === '\\n';\n\n        if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n          i++;\n        }\n      }\n\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n\n      this._lineOffsets = lineOffsets;\n    }\n\n    return this._lineOffsets;\n  };\n\n  FullTextDocument.prototype.positionAt = function (offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    var lineOffsets = this.getLineOffsets();\n    var low = 0,\n        high = lineOffsets.length;\n\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    } // low is the least x for which the line offset is larger than the current offset\n    // or array.length if no line offset is larger than the current offset\n\n\n    var line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  };\n\n  FullTextDocument.prototype.offsetAt = function (position) {\n    var lineOffsets = this.getLineOffsets();\n\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n\n    var lineOffset = lineOffsets[position.line];\n    var nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  };\n\n  Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n    get: function get() {\n      return this.getLineOffsets().length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FullTextDocument;\n}();\n\nvar Is;\n\n(function (Is) {\n  var toString = Object.prototype.toString;\n\n  function defined(value) {\n    return typeof value !== 'undefined';\n  }\n\n  Is.defined = defined;\n\n  function undefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  Is.undefined = undefined;\n\n  function boolean(value) {\n    return value === true || value === false;\n  }\n\n  Is.boolean = boolean;\n\n  function string(value) {\n    return toString.call(value) === '[object String]';\n  }\n\n  Is.string = string;\n\n  function number(value) {\n    return toString.call(value) === '[object Number]';\n  }\n\n  Is.number = number;\n\n  function func(value) {\n    return toString.call(value) === '[object Function]';\n  }\n\n  Is.func = func;\n\n  function objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n  }\n\n  Is.objectLiteral = objectLiteral;\n\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n\n  Is.typedArray = typedArray;\n})(Is || (Is = {}));"],"sourceRoot":""}